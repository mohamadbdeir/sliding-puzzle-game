{"version":3,"sources":["./src/app/name-exists-dialog/name-exists-dialog.component.ts","./src/app/name-exists-dialog/name-exists-dialog.component.html","./src/app/main-menu/main-menu.component.ts","./src/app/main-menu/main-menu.component.html","./src/environments/environment.ts","./src/app/instructions/instructions.component.ts","./src/app/instructions/instructions.component.html","./src/app/tile/tile.component.ts","./src/app/tile/tile.component.html","./src/app/services.ts/scoreService.ts","./src/app/grid/grid.component.ts","./src/app/grid/grid.component.html","./src/app/utils/urls.ts","./src/app/winner-dialog/winner-dialog.component.ts","./src/app/winner-dialog/winner-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/scores/scores.component.ts","./src/app/scores/scores.component.html","./src/app/services.ts/clickService.ts","./src/app/container/container.component.html","./src/app/container/container.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-name-exists-dialog',\n  templateUrl: './name-exists-dialog.component.html',\n  styleUrls: ['./name-exists-dialog.component.css']\n})\nexport class NameExistsDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>name-exists-dialog works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.css']\n})\nexport class MainMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-menu\">\n    <div class=\"container\">\n        <h1>Main menu</h1>\n        <button [routerLink]=\"['/game']\">New game</button>\n        <button [routerLink]=\"['/instructions']\">Insctructions</button>\n        <button [routerLink]=\"['/scores']\">Scores</button>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instructions',\n  templateUrl: './instructions.component.html',\n  styleUrls: ['./instructions.component.css']\n})\nexport class InstructionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <button [routerLink]=\"['/']\">Back to main menu</button>\n    <div class=\"instructions\">\n        You have to sort all the tiles in order from 1 to 8 in shortest time possible.\n        You can move tiles that are above, below, on the right or on the left of the empty tile\n        by cliking on them. When you click on a tile, it switches places with the empty tile.\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tile',\n  templateUrl: './tile.component.html',\n  styleUrls: ['./tile.component.css']\n})\nexport class TileComponent implements OnInit {\n\n  @Input() value: number;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tile\" [ngClass]=\"value===9 ? 'empty' : 'tile' \">\n    {{value}}\n</div>","import { TOUCH_BUFFER_MS } from \"@angular/cdk/a11y\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ScoreService\r\n{\r\n    seconds: number;\r\n    minutes: number;\r\n    hours: number;\r\n\r\n    moves: number;\r\n\r\n    setNumbers(seconds: number, minutes: number, hours:number, moves: number)\r\n    {\r\n        this.seconds = seconds;\r\n        this.minutes = minutes;\r\n        this.hours = hours;\r\n        this.moves = moves;\r\n    \r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ClickService } from '../services.ts/clickService';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'\nimport { WinnerDialogComponent } from '../winner-dialog/winner-dialog.component';\n\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.css']\n})\nexport class GridComponent implements OnInit {\n\n  numbers = [\n    1, 2, 3,\n    4, 5, 6,\n    7, 8, 9\n  ]\n  constructor(private clickService: ClickService, private dialog: MatDialog) {\n\n    //shuffle array\n    for (var i = this.numbers.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = this.numbers[i];\n      this.numbers[i] = this.numbers[j];\n      this.numbers[j] = temp;\n  }\n   }\n\n  ngOnInit(): void {\n  }\n\n  change(event) {\n\n    var index = Number(event.currentTarget.id);\n    var emptyIndex = this.numbers.indexOf(9);\n\n    this.clickService.lastClicked = event.target.innerText;\n  \n    if(emptyIndex == (index+1) || emptyIndex == (index-1) || emptyIndex==(index+3) || emptyIndex==(index-3))\n    {\n\n      var temp = this.numbers[index];\n      this.numbers[index]= this.numbers[emptyIndex];\n      this.numbers[emptyIndex] = temp;\n\n\n\n    }\n\n    /*if(this.numbers === [1,2,3,4,5,6,7,8,9])\n    {\n      alert(\"winner\");\n    }*/\n\n    if(this.isSorted())\n    {\n      this.openDialog();\n    }\n   \n\n\n  }\n\n  openDialog(): void {\n    this.clickService.win = true;\n    const dialogRef = this.dialog.open(WinnerDialogComponent, {\n      width: '250px',\n\n    });\n\n  }\n\n  isSorted()\n  {\n    for(var i =1; i<this.numbers.length; i++)\n    {\n      if(this.numbers[i]-1 != this.numbers[i-1])\n        return false;\n    }\n\n    return true;\n  }\n\n}\n","<div class=\"grid\">\n    <app-tile id=\"0\" [value]=\"numbers[0]\" (click)=\"change($event)\"></app-tile>\n    <app-tile id=\"1\" [value]=\"numbers[1]\" (click)=\"change($event)\"></app-tile>\n    <app-tile id=\"2\" [value]=\"numbers[2]\" (click)=\"change($event)\"></app-tile>\n    <app-tile id=\"3\" [value]=\"numbers[3]\" (click)=\"change($event)\"></app-tile>\n    <app-tile id=\"4\" [value]=\"numbers[4]\" (click)=\"change($event)\"></app-tile>\n    <app-tile id=\"5\" [value]=\"numbers[5]\" (click)=\"change($event)\"></app-tile>\n    <app-tile id=\"6\" [value]=\"numbers[6]\" (click)=\"change($event)\"></app-tile>\n    <app-tile id=\"7\" [value]=\"numbers[7]\" (click)=\"change($event)\"></app-tile>\n    <app-tile id=\"8\" [value]=\"numbers[8]\" (click)=\"change($event)\"></app-tile>\n</div>\n","export const baseUrl = 'http://mohamadbdeir-001-site1.btempurl.com/api/'","import { Component, OnInit } from '@angular/core';\nimport { ScoreService } from '../services.ts/scoreService';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { baseUrl } from '../utils/urls';\n\n@Component({\n  selector: 'app-winner-dialog',\n  templateUrl: './winner-dialog.component.html',\n  styleUrls: ['./winner-dialog.component.css']\n})\nexport class WinnerDialogComponent implements OnInit {\n\n\n  name: String=\"\";\n  time: String;\n  moves: number;\n  constructor(public scoreService: ScoreService, public dialogRef: MatDialogRef<WinnerDialogComponent>, private httpClient: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n\n\n  }\n\n\n  cancel() {\n\n    this.dialogRef.close();\n\n  }\n\n  submit() {\n\n    if(this.name === \"\" || this.name == undefined)\n    {\n      alert(\"The name can't be empty\");\n      return;\n    }\n    this.time = this.scoreService.hours + \":\" + this.scoreService.minutes + \":\" + this.scoreService.seconds;\n    this.moves = this.scoreService.moves;\n    let score = { \"name\": this.name, \"time\": this.time, \"moves\": this.moves };\n\n    \n    //this.httpClient.post(' https://sliding-puzzle-api.herokuapp.com/api/scores/addScore', score).subscribe();\n    this.httpClient.post(baseUrl+'scores/addScore', score).subscribe();\n    //this.httpClient.post(' http://localhost:5000/api/scores/addScore', score).subscribe();\n\n\n    this.dialogRef.close();\n    this.router.navigate(['/scores'])\n  }\n}\n","<div class=\"winner\"\n     mat-dialog-content>\n     <h1>You won</h1>\n     <div class=\"time\">Time: {{scoreService.hours\n          |number:'2.0'}}:{{scoreService.minutes|number:'2.0'}}:{{scoreService.seconds|number:'2.0'}} </div>\n     <div class=\"moves\">Moves: {{scoreService.moves}}</div>\n\n     <input type=\"text\"\n            class=\"name-input\"\n            placeholder=\"enter your name\"\n            [(ngModel)]=\"name\" />\n\n            <button mat-button class=\"submit\" (click)=\"submit()\"  [ngClass]=\"name==='' ? 'disabled' : 'enabled' \">Submit</button>\n            <button mat-button class=\"cancel\" (click)=\"cancel()\">Cancel</button>\n\n</div>    ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sliding-puzzle';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TileComponent } from './tile/tile.component';\nimport { GridComponent } from './grid/grid.component';\nimport { ContainerComponent } from './container/container.component';\nimport { ClickService } from './services.ts/clickService';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { WinnerDialogComponent } from './winner-dialog/winner-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ScoreService } from './services.ts/scoreService';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { ScoresComponent } from './scores/scores.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NameExistsDialogComponent } from './name-exists-dialog/name-exists-dialog.component';\nimport { InstructionsComponent } from './instructions/instructions.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TileComponent,\n    GridComponent,\n    ContainerComponent,\n    WinnerDialogComponent,\n    MainMenuComponent,\n    ScoresComponent,\n    NameExistsDialogComponent,\n    InstructionsComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    HttpClientModule,\n    FormsModule\n    \n  ],\n  providers: [ClickService, ScoreService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { baseUrl } from '../utils/urls';\n\n\n@Component({\n  selector: 'app-scores',\n  templateUrl: './scores.component.html',\n  styleUrls: ['./scores.component.css']\n})\nexport class ScoresComponent implements OnInit {\n\n\n  scores;\n  sortBy = \"moves\"\n  loading = true;\n  constructor(private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n\n    this.loadScores();\n\n  }\n\n\n  loadScores() {\n\n    this.loading = true;\n    //let path = \" https://sliding-puzzle-api.herokuapp.com/api/scores/\";\n\n\n    //let path = \"http://localhost:5000/api/scores\"\n\n    let path = baseUrl + \"Scores/getScoresByTime\"\n\n    if (this.sortBy === \"time\") {\n      //path +=\"getScoresByMoves\";\n\n      path = baseUrl + \"scores/getScoresByMoves\"\n    }\n    else {\n      //path+= \"getScoresByTime\"\n      path = baseUrl + \"scores/getScoresByTime\"\n    }\n\n    //console.log(path)\n    this.httpClient.get(path).subscribe(data => {\n      this.scores = data;\n      this.loading = false;\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"scores\">\n\n        <button [routerLink]=\"['/']\">Back to main menu</button>\n\n        <div class=\"sortBy\">\n            <h3>Sort scores by: </h3>\n            <div class=\"moves\">\n                <label for=\"moves\">number of moves</label>\n                <input type=\"radio\"\n                       id=\"moves\"\n                       checked\n                       name=\"sortBy\"\n                       value=\"moves\"\n                       [(ngModel)]=\"sortBy\"\n                       (click)=\"loadScores()\" />\n            </div>\n\n            <div class=\"time\">\n                <label for=\"time\">time</label>\n                <input type=\"radio\"\n                       id=\"time\"\n                       name=\"sortBy\"\n                       value=\"time\"\n                       [(ngModel)]=\"sortBy\"\n                       (click)=\"loadScores()\" />\n            </div>\n        </div>\n        <img *ngIf=\"loading\"\n             class=\"loading\"\n             src=\"assets/images/loader_ring.gif\" />\n\n        <div class=\"data\">\n            <table>\n                <tr *ngFor=\"let score of scores\">\n                    <td\n                        [ngClass]=\"{'first':scores.indexOf(score)==0, 'second': scores.indexOf(score)==1, 'third':scores.indexOf(score)==2}\">\n                        {{scores.indexOf(score)+1}}</td>\n                    <td>{{score.name}}</td>\n                    <td>{{score.time}}</td>\n                    <td>{{score.moves}}</td>\n                </tr>\n            </table>\n        </div>\n\n\n\n    </div>\n\n\n</div>","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ClickService\r\n{\r\n    lastClicked: number;\r\n    win:boolean = false;\r\n}","<div class=\"container\">\n    <button class=\"start\"\n            *ngIf=\"!started\"\n            (click)=\"start()\">Start</button>\n    <button class=\"pause\"\n            *ngIf=\"started && !paused\"\n            (click)=\"pause()\">Pause</button>\n    <button class=\"resume\"\n            *ngIf=\"started && paused\"\n            (click)=\"resume()\">Resume</button>\n  <!--  <button class=\"clicks\"\n            (click)=\"openDialog()\">test</button>-->\n    <div class=\"info\">\n        <div class=\"time\">\n            <span class=\"hours\"\n                  *ngIf=\"hours > 0\">{{hours | number:'2.0'}}:</span>\n            {{minutes | number:'2.0'}}:{{seconds |\n            number:'2.0'}}\n        </div>\n        <div class=\"clicks\">Moves: {{numberOfClicks}}</div>\n    </div>\n\n    <app-grid (click)=\"click()\"></app-grid>\n\n\n</div>","import { TOUCH_BUFFER_MS } from '@angular/cdk/a11y';\nimport { Component, OnInit } from '@angular/core';\nimport { ClickService } from '../services.ts/clickService'\nimport { ScoreService } from '../services.ts/scoreService';\n\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n\n  seconds: number = 0;\n  minutes: number = 0;\n  hours: number = 0;\n  interval;\n  started = false;\n  paused = false;\n  numberOfClicks = 0;\n  constructor(private clickService: ClickService, private scoreService: ScoreService) {\n\n\n  }\n\n\n  start() {\n    this.started = true;\n    this.interval = setInterval(() => {\n      this.timer();\n    }, 1000)\n\n  }\n\n\n  timer() {\n    if (this.seconds < 59) {\n      this.seconds++;\n    }\n    else {\n      this.seconds = 0;\n      if (this.minutes < 59) {\n        this.minutes++;\n      }\n      else {\n        this.minutes = 0;\n        this.hours++;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  click() {\n\n    if(this.clickService.win)\n    {\n      this.scoreService.setNumbers(this.seconds, this.minutes, this.hours, this.numberOfClicks);\n      clearInterval(this.interval);\n    }\n\n    if (this.clickService.lastClicked != 9) {\n      if (!this.started) {\n        this.started = true\n        this.start();\n      }\n\n      if (this.paused)\n        this.resume();\n\n      this.numberOfClicks++;\n    }\n  }\n\n\n  pause() {\n    this.paused = true\n    clearInterval(this.interval);\n  }\n\n  resume() {\n    if (this.clickService.lastClicked != 9) {\n      this.paused = false;\n      this.interval = setInterval(() => {\n        this.timer();\n      }, 1000);\n    }\n  }\n\n \n\n \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContainerComponent } from './container/container.component';\nimport { InstructionsComponent } from './instructions/instructions.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { ScoresComponent } from './scores/scores.component';\n\nconst routes: Routes = [\n  {path:'', component: MainMenuComponent},\n  {path:'game', component:ContainerComponent},\n  {path:'scores', component:ScoresComponent},\n  {path:'instructions', component:InstructionsComponent},\n  {path: '**',  component: MainMenuComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}